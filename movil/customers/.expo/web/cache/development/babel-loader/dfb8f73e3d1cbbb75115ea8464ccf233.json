{"ast":null,"code":"import { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Customer from \"../screens/Customer\";\nimport CustomerInfo from \"../screens/CustomerInfo\";\nimport Home from \"../screens/Home\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          headerTitle: 'Customer List',\n          headerTitleStyle: {\n            color: '#3498db',\n            fontSize: 28,\n            fontWeight: '600'\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Customer\",\n      component: Customer,\n      options: function options(_ref3) {\n        var navigation = _ref3.navigation;\n        return {\n          headerTitle: 'Agregar cliente',\n          headerTitleStyle: {\n            color: '#3498db',\n            fontSize: 28,\n            fontWeight: '600'\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CustomerInfo\",\n      component: CustomerInfo,\n      options: function options(_ref4) {\n        var navigation = _ref4.navigation;\n        return {\n          headerTitle: 'Información del cliente',\n          headerTitleStyle: {\n            color: '#3498db',\n            fontSize: 28,\n            fontWeight: '600'\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.replace('Home');\n              },\n              style: function style(_ref5) {\n                var pressed = _ref5.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(Ionicons, {\n                name: \"arrow-back\",\n                size: 30,\n                color: \"#3498db\",\n                style: {\n                  marginLeft: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["Ionicons","NavigationContainer","DefaultTheme","createNativeStackNavigator","React","Customer","CustomerInfo","Home","NotFoundScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","navigation","headerTitle","headerTitleStyle","color","fontSize","fontWeight","headerLeft","replace","pressed","opacity","marginLeft","title"],"sources":["/home/luis/Documentos/web/customers/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { Feather, FontAwesome, Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable, View } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport Customer from '../screens/Customer';\nimport CustomerInfo from '../screens/CustomerInfo';\nimport Home from '../screens/Home';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport { RootStackParamList, RootStackScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={Home} \n      options={({navigation}: RootStackScreenProps<'Home'>) => ({\n        headerTitle: 'Customer List',\n        headerTitleStyle: {color: '#3498db', fontSize: 28, fontWeight: '600'},\n      })}/>\n      <Stack.Screen name=\"Customer\" component={Customer} \n      options={({navigation}: RootStackScreenProps<'Customer'>) => ({\n        headerTitle: 'Agregar cliente',\n        headerTitleStyle: {color: '#3498db', fontSize: 28, fontWeight: '600'},\n      })}/>\n      <Stack.Screen name=\"CustomerInfo\" component={CustomerInfo} \n      options={({navigation}: RootStackScreenProps<'CustomerInfo'>) => ({\n        headerTitle: 'Información del cliente',\n        headerTitleStyle: {color: '#3498db', fontSize: 28, fontWeight: '600'},\n        headerLeft: () => (\n          <Pressable\n            onPress={() => navigation.replace('Home')}\n            style={({ pressed }) => ({\n              opacity: pressed ? 0.5 : 1,\n            })}>\n            <Ionicons\n              name=\"arrow-back\"\n              size={30}\n              color='#3498db'\n              style={{ marginLeft: 15 }}\n            />\n          </Pressable>\n        ),\n      })}/>\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n"],"mappings":"AAKA,SAA+BA,QAA/B,QAA8D,oBAA9D;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAKA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAOC,IAAP;AACA,OAAOC,cAAP;AAEA,OAAOC,oBAAP;;;AAEA,eAAe,SAASC,UAAT,OAAuE;EAAA,IAAjDC,WAAiD,QAAjDA,WAAiD;EACpF,OACE,KAAC,mBAAD;IACE,OAAO,EAAEF,oBADX;IAEE,KAAK,EAAEP,YAFT;IAAA,UAGE,KAAC,aAAD;EAHF,EADF;AAOD;AAMD,IAAMU,KAAK,GAAGT,0BAA0B,EAAxC;;AAEA,SAASU,aAAT,GAAyB;EACvB,OACE,MAAC,KAAD,CAAO,SAAP;IAAA,WACE,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,MAAnB;MAA0B,SAAS,EAAEN,IAArC;MACA,OAAO,EAAE;QAAA,IAAEO,UAAF,SAAEA,UAAF;QAAA,OAAiD;UACxDC,WAAW,EAAE,eAD2C;UAExDC,gBAAgB,EAAE;YAACC,KAAK,EAAE,SAAR;YAAmBC,QAAQ,EAAE,EAA7B;YAAiCC,UAAU,EAAE;UAA7C;QAFsC,CAAjD;MAAA;IADT,EADF,EAME,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,UAAnB;MAA8B,SAAS,EAAEd,QAAzC;MACA,OAAO,EAAE;QAAA,IAAES,UAAF,SAAEA,UAAF;QAAA,OAAqD;UAC5DC,WAAW,EAAE,iBAD+C;UAE5DC,gBAAgB,EAAE;YAACC,KAAK,EAAE,SAAR;YAAmBC,QAAQ,EAAE,EAA7B;YAAiCC,UAAU,EAAE;UAA7C;QAF0C,CAArD;MAAA;IADT,EANF,EAWE,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,cAAnB;MAAkC,SAAS,EAAEb,YAA7C;MACA,OAAO,EAAE;QAAA,IAAEQ,UAAF,SAAEA,UAAF;QAAA,OAAyD;UAChEC,WAAW,EAAE,yBADmD;UAEhEC,gBAAgB,EAAE;YAACC,KAAK,EAAE,SAAR;YAAmBC,QAAQ,EAAE,EAA7B;YAAiCC,UAAU,EAAE;UAA7C,CAF8C;UAGhEC,UAAU,EAAE;YAAA,OACV,KAAC,SAAD;cACE,OAAO,EAAE;gBAAA,OAAMN,UAAU,CAACO,OAAX,CAAmB,MAAnB,CAAN;cAAA,CADX;cAEE,KAAK,EAAE;gBAAA,IAAGC,OAAH,SAAGA,OAAH;gBAAA,OAAkB;kBACvBC,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;gBADF,CAAlB;cAAA,CAFT;cAAA,UAKE,KAAC,QAAD;gBACE,IAAI,EAAC,YADP;gBAEE,IAAI,EAAE,EAFR;gBAGE,KAAK,EAAC,SAHR;gBAIE,KAAK,EAAE;kBAAEE,UAAU,EAAE;gBAAd;cAJT;YALF,EADU;UAAA;QAHoD,CAAzD;MAAA;IADT,EAXF,EA8BE,KAAC,KAAD,CAAO,MAAP;MAAc,IAAI,EAAC,UAAnB;MAA8B,SAAS,EAAEhB,cAAzC;MAAyD,OAAO,EAAE;QAAEiB,KAAK,EAAE;MAAT;IAAlE,EA9BF;EAAA,EADF;AAkCD"},"metadata":{},"sourceType":"module"}